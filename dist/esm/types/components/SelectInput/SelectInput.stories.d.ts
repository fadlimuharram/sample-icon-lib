import React from 'react';
import { ComponentStory } from '@storybook/react';
declare const _default: {
    title: string;
    component: React.FC<{
        name: string;
        className?: string | undefined;
        label?: string | undefined;
        labelClass?: string | undefined;
        options?: import("../SelectItem/SelectItem").SelectOption[] | undefined;
        placeholder?: string | undefined;
        inputPlaceholder?: string | undefined;
        onSelectChange?: ((opt: import("react-select").SingleValue<import("../SelectItem/SelectItem").SelectOption>) => void) | undefined;
        onInputChange?: ((e: React.ChangeEvent<HTMLInputElement>) => void) | undefined;
        selectDefaultValue?: import("../SelectItem/SelectItem").SelectOption | undefined;
        selectValue?: import("../SelectItem/SelectItem").SelectOption | undefined;
        inputDefaultValue?: string | undefined;
        inputValue?: string | undefined;
        inputType?: React.HTMLInputTypeAttribute | undefined;
        inputMin?: number | undefined;
        inputMax?: number | undefined;
        searchable?: boolean | undefined;
        required?: boolean | undefined;
        disabled?: boolean | undefined;
        disabledSelect?: boolean | undefined;
        reverse?: boolean | undefined;
        error?: string | undefined;
    }>;
};
export default _default;
export declare const Base: ComponentStory<React.FC<{
    name: string;
    className?: string | undefined;
    label?: string | undefined;
    labelClass?: string | undefined;
    options?: import("../SelectItem/SelectItem").SelectOption[] | undefined;
    placeholder?: string | undefined;
    inputPlaceholder?: string | undefined;
    onSelectChange?: ((opt: import("react-select").SingleValue<import("../SelectItem/SelectItem").SelectOption>) => void) | undefined;
    onInputChange?: ((e: React.ChangeEvent<HTMLInputElement>) => void) | undefined;
    selectDefaultValue?: import("../SelectItem/SelectItem").SelectOption | undefined;
    selectValue?: import("../SelectItem/SelectItem").SelectOption | undefined;
    inputDefaultValue?: string | undefined;
    inputValue?: string | undefined;
    inputType?: React.HTMLInputTypeAttribute | undefined;
    inputMin?: number | undefined;
    inputMax?: number | undefined;
    searchable?: boolean | undefined;
    required?: boolean | undefined;
    disabled?: boolean | undefined;
    disabledSelect?: boolean | undefined;
    reverse?: boolean | undefined;
    error?: string | undefined;
}>>;
export declare const DisabledSelect: ComponentStory<React.FC<{
    name: string;
    className?: string | undefined;
    label?: string | undefined;
    labelClass?: string | undefined;
    options?: import("../SelectItem/SelectItem").SelectOption[] | undefined;
    placeholder?: string | undefined;
    inputPlaceholder?: string | undefined;
    onSelectChange?: ((opt: import("react-select").SingleValue<import("../SelectItem/SelectItem").SelectOption>) => void) | undefined;
    onInputChange?: ((e: React.ChangeEvent<HTMLInputElement>) => void) | undefined;
    selectDefaultValue?: import("../SelectItem/SelectItem").SelectOption | undefined;
    selectValue?: import("../SelectItem/SelectItem").SelectOption | undefined;
    inputDefaultValue?: string | undefined;
    inputValue?: string | undefined;
    inputType?: React.HTMLInputTypeAttribute | undefined;
    inputMin?: number | undefined;
    inputMax?: number | undefined;
    searchable?: boolean | undefined;
    required?: boolean | undefined;
    disabled?: boolean | undefined;
    disabledSelect?: boolean | undefined;
    reverse?: boolean | undefined;
    error?: string | undefined;
}>>;
export declare const Reverse: ComponentStory<React.FC<{
    name: string;
    className?: string | undefined;
    label?: string | undefined;
    labelClass?: string | undefined;
    options?: import("../SelectItem/SelectItem").SelectOption[] | undefined;
    placeholder?: string | undefined;
    inputPlaceholder?: string | undefined;
    onSelectChange?: ((opt: import("react-select").SingleValue<import("../SelectItem/SelectItem").SelectOption>) => void) | undefined;
    onInputChange?: ((e: React.ChangeEvent<HTMLInputElement>) => void) | undefined;
    selectDefaultValue?: import("../SelectItem/SelectItem").SelectOption | undefined;
    selectValue?: import("../SelectItem/SelectItem").SelectOption | undefined;
    inputDefaultValue?: string | undefined;
    inputValue?: string | undefined;
    inputType?: React.HTMLInputTypeAttribute | undefined;
    inputMin?: number | undefined;
    inputMax?: number | undefined;
    searchable?: boolean | undefined;
    required?: boolean | undefined;
    disabled?: boolean | undefined;
    disabledSelect?: boolean | undefined;
    reverse?: boolean | undefined;
    error?: string | undefined;
}>>;
export declare const Number: ComponentStory<React.FC<{
    name: string;
    className?: string | undefined;
    label?: string | undefined;
    labelClass?: string | undefined;
    options?: import("../SelectItem/SelectItem").SelectOption[] | undefined;
    placeholder?: string | undefined;
    inputPlaceholder?: string | undefined;
    onSelectChange?: ((opt: import("react-select").SingleValue<import("../SelectItem/SelectItem").SelectOption>) => void) | undefined;
    onInputChange?: ((e: React.ChangeEvent<HTMLInputElement>) => void) | undefined;
    selectDefaultValue?: import("../SelectItem/SelectItem").SelectOption | undefined;
    selectValue?: import("../SelectItem/SelectItem").SelectOption | undefined;
    inputDefaultValue?: string | undefined;
    inputValue?: string | undefined;
    inputType?: React.HTMLInputTypeAttribute | undefined;
    inputMin?: number | undefined;
    inputMax?: number | undefined;
    searchable?: boolean | undefined;
    required?: boolean | undefined;
    disabled?: boolean | undefined;
    disabledSelect?: boolean | undefined;
    reverse?: boolean | undefined;
    error?: string | undefined;
}>>;
export declare const Error: ComponentStory<React.FC<{
    name: string;
    className?: string | undefined;
    label?: string | undefined;
    labelClass?: string | undefined;
    options?: import("../SelectItem/SelectItem").SelectOption[] | undefined;
    placeholder?: string | undefined;
    inputPlaceholder?: string | undefined;
    onSelectChange?: ((opt: import("react-select").SingleValue<import("../SelectItem/SelectItem").SelectOption>) => void) | undefined;
    onInputChange?: ((e: React.ChangeEvent<HTMLInputElement>) => void) | undefined;
    selectDefaultValue?: import("../SelectItem/SelectItem").SelectOption | undefined;
    selectValue?: import("../SelectItem/SelectItem").SelectOption | undefined;
    inputDefaultValue?: string | undefined;
    inputValue?: string | undefined;
    inputType?: React.HTMLInputTypeAttribute | undefined;
    inputMin?: number | undefined;
    inputMax?: number | undefined;
    searchable?: boolean | undefined;
    required?: boolean | undefined;
    disabled?: boolean | undefined;
    disabledSelect?: boolean | undefined;
    reverse?: boolean | undefined;
    error?: string | undefined;
}>>;
